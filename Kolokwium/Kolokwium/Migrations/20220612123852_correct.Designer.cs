// <auto-generated />
using System;
using Kolokwium.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kolokwium.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220612123852_correct")]
    partial class correct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kolokwium.Models.DTO.MyAlbum", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdMusicLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum");

                    b.HasIndex("IdMusicLabel");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            AlbumName = "Bohemian Rhapsody",
                            IdMusicLabel = 1,
                            PublishDate = new DateTime(1972, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdAlbum = 2,
                            AlbumName = "chopin - top 99",
                            IdMusicLabel = 1,
                            PublishDate = new DateTime(1909, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusicLabel", b =>
                {
                    b.Property<int>("IdMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMusicLabel");

                    b.ToTable("MusicLabels");

                    b.HasData(
                        new
                        {
                            IdMusicLabel = 1,
                            Name = "Muzyka klasyczna"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusician", b =>
                {
                    b.Property<int>("IdMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMusician");

                    b.ToTable("Musicians");

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            FirstName = "Jakub",
                            LastName = "Montewka"
                        },
                        new
                        {
                            IdMusician = 2,
                            FirstName = "Wojciech",
                            LastName = "Siekierzyński",
                            NickName = "Siekiera"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusician_Track", b =>
                {
                    b.Property<int>("IdMusician")
                        .HasColumnType("int");

                    b.Property<int>("IdTrack")
                        .HasColumnType("int");

                    b.HasKey("IdMusician");

                    b.HasIndex("IdTrack");

                    b.ToTable("MusicianTracks");

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            IdTrack = 1
                        },
                        new
                        {
                            IdMusician = 2,
                            IdTrack = 2
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyTrack", b =>
                {
                    b.Property<int>("IdTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int>("IdMusicAlbum")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTrack");

                    b.HasIndex("IdMusicAlbum");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            Duration = 314f,
                            IdMusicAlbum = 2,
                            TrackName = "Polonez F-dur"
                        },
                        new
                        {
                            IdTrack = 2,
                            Duration = 501f,
                            IdMusicAlbum = 1,
                            TrackName = "Show must go on!"
                        });
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyAlbum", b =>
                {
                    b.HasOne("Kolokwium.Models.DTO.MyMusicLabel", "MyMusicLabel")
                        .WithMany("MyAlbums")
                        .HasForeignKey("IdMusicLabel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyMusicLabel");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusician_Track", b =>
                {
                    b.HasOne("Kolokwium.Models.DTO.MyMusician", "MyMusician")
                        .WithMany("MusicianTracks")
                        .HasForeignKey("IdMusician")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kolokwium.Models.DTO.MyTrack", "MyTrack")
                        .WithMany("MyMusicianTracks")
                        .HasForeignKey("IdTrack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyMusician");

                    b.Navigation("MyTrack");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyTrack", b =>
                {
                    b.HasOne("Kolokwium.Models.DTO.MyAlbum", "MyAlbum")
                        .WithMany("MyTracks")
                        .HasForeignKey("IdMusicAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MyAlbum");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyAlbum", b =>
                {
                    b.Navigation("MyTracks");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusicLabel", b =>
                {
                    b.Navigation("MyAlbums");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyMusician", b =>
                {
                    b.Navigation("MusicianTracks");
                });

            modelBuilder.Entity("Kolokwium.Models.DTO.MyTrack", b =>
                {
                    b.Navigation("MyMusicianTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
